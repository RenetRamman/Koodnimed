package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@CrossOrigin(origins = "http://localhost:8081")
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ContactRepository contactRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (
    @RequestParam(value = "nimi", defaultValue = "Anonüümne") String name,
    @RequestParam(value = "koodnimi", defaultValue = "_") String codename,
    @RequestParam(value = "telefon", defaultValue = "_") String phone) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    

    Contact n = new Contact();
    n.setName(name);
    n.setCodename(codename);
    n.setPhone(Integer.parseInt(phone));
    contactRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Contact> getAllUsers() {
    // This returns a JSON or XML with the users

    return contactRepository.findN(10);
  }

  @GetMapping(path="/nafterm")
  public @ResponseBody Iterable<Contact> getNafterMusers(
    @RequestParam(value = "n", defaultValue = "10") String n,
    @RequestParam(value = "m", defaultValue = "0") String m,
    @RequestParam(value = "by", defaultValue = "id") String by,
    @RequestParam(value = "order", defaultValue = "asc") String order
  ) {
    return contactRepository.findNafterM(Integer.parseInt(n), Integer.parseInt(m));
  }

}
