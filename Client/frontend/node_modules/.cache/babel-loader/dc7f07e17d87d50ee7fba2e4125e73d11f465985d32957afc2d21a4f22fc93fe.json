{"ast":null,"code":"import axios from 'axios';\nconst CONTACT_API_ADD_CONTACT_ULR = 'http://localhost:8080/demo/add';\nconst CONTACT_API_N_AFTER_M_CONTACTS_ULR = 'http://localhost:8080/demo/nafterm';\nconst CONTACT_API_SEARCH_CONTACTS_URL = 'http://localhost:8080/demo/search';\nclass ContactService {\n  // GET p채ring APIle, (m..m+n], by j채rgi sorteeritud kontakti kuvamiseks\n  getNafterMcontacts(n, m, by) {\n    var data = axios.get(CONTACT_API_N_AFTER_M_CONTACTS_ULR + \"?n=\" + n + \"&m=\" + m + \"&by=\" + by);\n    return data;\n  }\n\n  // POST request nime, koodnime ja telefoninumbriga kontakti andmebaasi lisamiseks\n  addContact(name, codename, phone) {\n    axios.post(CONTACT_API_ADD_CONTACT_ULR, null, {\n      params: {\n        nimi: name,\n        koodnimi: codename,\n        telefon: phone\n      }\n    }).then(response => response.status).catch(err => console.warn(err));\n  }\n  searchContact(search) {\n    return axios.get(CONTACT_API_SEARCH_CONTACTS_URL + \"?search=\" + search);\n  }\n}\nexport default new ContactService();","map":{"version":3,"names":["axios","CONTACT_API_ADD_CONTACT_ULR","CONTACT_API_N_AFTER_M_CONTACTS_ULR","CONTACT_API_SEARCH_CONTACTS_URL","ContactService","getNafterMcontacts","n","m","by","data","get","addContact","name","codename","phone","post","params","nimi","koodnimi","telefon","then","response","status","catch","err","console","warn","searchContact","search"],"sources":["D:/Projects/Java/koodnimed/Client/frontend/src/services/ContactService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst CONTACT_API_ADD_CONTACT_ULR = 'http://localhost:8080/demo/add';\r\nconst CONTACT_API_N_AFTER_M_CONTACTS_ULR = 'http://localhost:8080/demo/nafterm';\r\nconst CONTACT_API_SEARCH_CONTACTS_URL = 'http://localhost:8080/demo/search';\r\n\r\nclass ContactService {\r\n\r\n    // GET p채ring APIle, (m..m+n], by j채rgi sorteeritud kontakti kuvamiseks\r\n    getNafterMcontacts(n, m, by) {\r\n        var data = axios.get(CONTACT_API_N_AFTER_M_CONTACTS_ULR + \"?n=\" + n + \"&m=\" + m + \"&by=\" + by)\r\n        return data;\r\n    }\r\n\r\n    // POST request nime, koodnime ja telefoninumbriga kontakti andmebaasi lisamiseks\r\n    addContact(name, codename, phone) {\r\n        axios.post(CONTACT_API_ADD_CONTACT_ULR, null, { params: {\r\n            nimi:name,\r\n            koodnimi:codename,\r\n            telefon:phone\r\n          }})\r\n          .then(response => response.status)\r\n          .catch(err => console.warn(err));\r\n    }\r\n\r\n    searchContact(search) {\r\n        return axios.get(CONTACT_API_SEARCH_CONTACTS_URL + \"?search=\" + search)\r\n    }\r\n}\r\n\r\nexport default new ContactService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,2BAA2B,GAAG,gCAAgC;AACpE,MAAMC,kCAAkC,GAAG,oCAAoC;AAC/E,MAAMC,+BAA+B,GAAG,mCAAmC;AAE3E,MAAMC,cAAc,CAAC;EAEjB;EACAC,kBAAkBA,CAACC,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAE;IACzB,IAAIC,IAAI,GAAGT,KAAK,CAACU,GAAG,CAACR,kCAAkC,GAAG,KAAK,GAAGI,CAAC,GAAG,KAAK,GAAGC,CAAC,GAAG,MAAM,GAAGC,EAAE,CAAC;IAC9F,OAAOC,IAAI;EACf;;EAEA;EACAE,UAAUA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IAC9Bd,KAAK,CAACe,IAAI,CAACd,2BAA2B,EAAE,IAAI,EAAE;MAAEe,MAAM,EAAE;QACpDC,IAAI,EAACL,IAAI;QACTM,QAAQ,EAACL,QAAQ;QACjBM,OAAO,EAACL;MACV;IAAC,CAAC,CAAC,CACFM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAAC,CACjCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC,CAAC;EACtC;EAEAG,aAAaA,CAACC,MAAM,EAAE;IAClB,OAAO5B,KAAK,CAACU,GAAG,CAACP,+BAA+B,GAAG,UAAU,GAAGyB,MAAM,CAAC;EAC3E;AACJ;AAEA,eAAe,IAAIxB,cAAc,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}