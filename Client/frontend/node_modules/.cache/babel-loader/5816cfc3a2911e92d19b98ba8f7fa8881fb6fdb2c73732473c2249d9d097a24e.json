{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \" Contact List\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table table-striped\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \" Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \" Codename\"), /*#__PURE__*/_createElementVNode(\"th\", null, \" Phone\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.contacts, contact => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: contact.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(contact.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.codename), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(contact.phone), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Input for new contacts \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nimi = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nimi]]), _createElementVNode(\"p\", null, [_createTextVNode(\"You typed: \"), _createElementVNode(\"b\", null, _toDisplayString($data.nimi), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.addContact())\n  }, \"lisa\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","contacts","contact","key","id","_toDisplayString","name","codename","phone","_createCommentVNode","nimi","$event","onClick","_cache","$options","addContact"],"sources":["D:\\Projects\\Java\\Client\\frontend\\src\\components\\Contacts-component.vue"],"sourcesContent":["<template>\r\n    <div class = \"container\">\r\n            \r\n            <h1 class = \"text-center\"> Contact List</h1>\r\n\r\n            <table class = \"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Name</th>\r\n                        <th> Codename</th>\r\n                        <th> Phone</th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"contact in contacts\" v-bind:key=\"contact.id\">\r\n                        <td> {{contact.id }}</td>\r\n                        <td> {{contact.name }}</td>\r\n                        <td> {{contact.codename}}</td>    \r\n                        <td> {{contact.phone}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            \r\n            <!-- Input for new contacts -->\r\n            <div>\r\n                <input v-model=\"nimi\">\r\n                <p>You typed: <b>{{ nimi }}</b></p>\r\n                <button @click=\"addContact()\">lisa</button>\r\n            </div>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport ContactService from '../services/ContactService';\r\n\r\nvar nimi = ''\r\n\r\nexport default {\r\n    name: 'Contacts-data',\r\n    data(){\r\n        return {\r\n            contacts: [],\r\n            nimi: ''\r\n        }\r\n    },\r\n    methods: {\r\n        getContacts(){\r\n            ContactService.getContacts().then((response) => {\r\n                this.contacts = response.data;   \r\n            });\r\n        },\r\n\r\n        addContact() {\r\n            ContactService.addContact(nimi);\r\n        }\r\n    },\r\n    created() {\r\n        this.getContacts();\r\n    }\r\n}\r\n\r\n</script>"],"mappings":";;EACSA,KAAK,EAAG;AAAW;gCAEhBC,mBAAA,CAA4C;EAAxCD,KAAK,EAAG;AAAa,GAAC,eAAa;;EAEhCA,KAAK,EAAG;AAAqB;gCAChCC,mBAAA,CAOQ,gB,aANJA,mBAAA,CAIK,a,aAHDA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAkB,YAAd,WAAS,G,aACbA,mBAAA,CAAe,YAAX,QAAM,E;;;uBAT9BC,mBAAA,CA6BU,OA7BVC,UA6BU,GA3BFC,UAA4C,EAE5CH,mBAAA,CAiBQ,SAjBRI,UAiBQ,GAhBJC,UAOQ,EACRL,mBAAA,CAOQ,iB,kBANJC,mBAAA,CAKKK,SAAA,QAAAC,WAAA,CALiBC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBT,mBAAA,CAKK;MALkCU,GAAG,EAAED,OAAO,CAACE;QAChDZ,mBAAA,CAAyB,YAAAa,gBAAA,CAAlBH,OAAO,CAACE,EAAE,kBACjBZ,mBAAA,CAA2B,YAAAa,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBd,mBAAA,CAA8B,YAAAa,gBAAA,CAAvBH,OAAO,CAACK,QAAQ,kBACvBf,mBAAA,CAA2B,YAAAa,gBAAA,CAApBH,OAAO,CAACM,KAAK,iB;sCAKhCC,mBAAA,4BAA+B,EAC/BjB,mBAAA,CAIM,c,gBAHFA,mBAAA,CAAsB;+DAANQ,KAAA,CAAAU,IAAI,GAAAC,MAAA;iDAAJX,KAAA,CAAAU,IAAI,E,GACpBlB,mBAAA,CAAmC,Y,iBAAhC,aAAW,GAAAA,mBAAA,CAAiB,WAAAa,gBAAA,CAAXL,KAAA,CAAAU,IAAI,iB,GACxBlB,mBAAA,CAA2C;IAAlCoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,UAAU;KAAI,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}