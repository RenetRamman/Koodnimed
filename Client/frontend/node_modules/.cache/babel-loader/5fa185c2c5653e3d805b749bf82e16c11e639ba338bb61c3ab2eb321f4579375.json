{"ast":null,"code":"import ContactService from '../services/ContactService';\nexport default {\n  name: 'Contacts-data',\n  data() {\n    return {\n      contacts: [],\n      n: 2,\n      m: 0,\n      previousAvailable: false,\n      nextAvailable: true\n    };\n  },\n  methods: {\n    getContacts() {\n      ContactService.getContacts().then(response => {\n        this.contacts = response.data;\n      });\n    },\n    getNextContacts() {\n      this.m += this.n;\n      ContactService.getNafterMcontacts(this.n, this.m).then(response => {\n        this.contacts = response.data;\n        if (length(this.contacts) == this.n) {\n          this.nextAvailable = true;\n        } else {\n          this.nextAvailable = false;\n        }\n      });\n    },\n    getPreviousContacts() {\n      this.m -= this.n;\n      ContactService.getNafterMcontacts(this.n, this.m).then(response => {\n        this.contacts = response.data;\n      });\n    },\n    addContact(name, codename, phone) {\n      ContactService.addContact(name, codename, phone);\n    }\n  },\n  created() {\n    this.getNextContacts(this.n, this.m);\n  }\n};","map":{"version":3,"names":["ContactService","name","data","contacts","n","m","previousAvailable","nextAvailable","methods","getContacts","then","response","getNextContacts","getNafterMcontacts","length","getPreviousContacts","addContact","codename","phone","created"],"sources":["D:\\Projects\\Java\\koodnimed\\Client\\frontend\\src\\components\\Contacts-component.vue"],"sourcesContent":["<template>\r\n    <div class = \"container\">\r\n            \r\n            <h1 class = \"text-center\"> Kontaktid</h1>\r\n\r\n            <table class = \"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Nimi</th>\r\n                        <th> Koodnimi</th>\r\n                        <th> Telefon</th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"contact in contacts\" v-bind:key=\"contact.id\">\r\n                        <!-- <td> {{contact.id }}</td> -->\r\n                        <td> {{contact.name }}</td>\r\n                        <td> {{contact.codename}}</td>    \r\n                        <td> {{contact.phone}}</td>\r\n                    </tr>\r\n                    <button v-if=\"m\" @click=\"getPreviousContacts()\">Eelmised kontaktid</button>\r\n                    <button @click=\"getNextContacts()\">JÃ¤rgminesed kontaktid</button>\r\n                </tbody>\r\n            </table>\r\n            \r\n            <!-- Input for new contacts -->\r\n            <div>\r\n                <input v-model=\"name\" placeholder=\"Nimi\">\r\n                <input v-model=\"codename\" placeholder=\"Koodnimi\">\r\n                <input v-model=\"phone\" placeholder=\"telefon\">\r\n                \r\n                <button @click=\"addContact(name, codename, phone)\">lisa</button>\r\n            </div>\r\n        </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport ContactService from '../services/ContactService';\r\n\r\n\r\nexport default {\r\n    name: 'Contacts-data',\r\n    data(){\r\n        return {\r\n            contacts: [],\r\n            n: 2,\r\n            m: 0,\r\n            previousAvailable: false,\r\n            nextAvailable: true\r\n        }\r\n    },\r\n    methods: {\r\n        getContacts(){\r\n            ContactService.getContacts().then((response) => {\r\n                this.contacts = response.data;   \r\n            });\r\n        },\r\n\r\n        getNextContacts() {\r\n            this.m += this.n\r\n            ContactService.getNafterMcontacts(this.n, this.m).then((response) => {\r\n                this.contacts = response.data;\r\n                if (length(this.contacts) == this.n) {\r\n                    this.nextAvailable = true\r\n                }\r\n                else {\r\n                    this.nextAvailable = false\r\n                }\r\n            });\r\n        },\r\n\r\n        getPreviousContacts() {\r\n            this.m -= this.n\r\n            ContactService.getNafterMcontacts(this.n, this.m).then((response) => {\r\n                this.contacts = response.data;\r\n            });\r\n        },\r\n\r\n        addContact(name, codename, phone) {\r\n            ContactService.addContact(name, codename, phone);\r\n        }\r\n    },\r\n    created() {\r\n        this.getNextContacts(this.n, this.m);\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\nth {\r\n    margin: 200px;\r\n}\r\n</style>"],"mappings":"AAuCA,OAAOA,cAAa,MAAO,4BAA4B;AAGvD,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MACJC,iBAAiB,EAAE,KAAK;MACxBC,aAAa,EAAE;IACnB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAE;MACTT,cAAc,CAACS,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAC5C,IAAI,CAACR,QAAO,GAAIQ,QAAQ,CAACT,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IAEDU,eAAeA,CAAA,EAAG;MACd,IAAI,CAACP,CAAA,IAAK,IAAI,CAACD,CAAA;MACfJ,cAAc,CAACa,kBAAkB,CAAC,IAAI,CAACT,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;QACjE,IAAI,CAACR,QAAO,GAAIQ,QAAQ,CAACT,IAAI;QAC7B,IAAIY,MAAM,CAAC,IAAI,CAACX,QAAQ,KAAK,IAAI,CAACC,CAAC,EAAE;UACjC,IAAI,CAACG,aAAY,GAAI,IAAG;QAC5B,OACK;UACD,IAAI,CAACA,aAAY,GAAI,KAAI;QAC7B;MACJ,CAAC,CAAC;IACN,CAAC;IAEDQ,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACV,CAAA,IAAK,IAAI,CAACD,CAAA;MACfJ,cAAc,CAACa,kBAAkB,CAAC,IAAI,CAACT,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;QACjE,IAAI,CAACR,QAAO,GAAIQ,QAAQ,CAACT,IAAI;MACjC,CAAC,CAAC;IACN,CAAC;IAEDc,UAAUA,CAACf,IAAI,EAAEgB,QAAQ,EAAEC,KAAK,EAAE;MAC9BlB,cAAc,CAACgB,UAAU,CAACf,IAAI,EAAEgB,QAAQ,EAAEC,KAAK,CAAC;IACpD;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACP,eAAe,CAAC,IAAI,CAACR,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;EACxC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}